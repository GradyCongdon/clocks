{"version":3,"sources":["Time.js","Themes.js","Times.js","Clock.js","Range.js","App.js","serviceWorker.js","index.js"],"names":["offsetX","window","screen","width","offsetY","height","baseStyle","display","justifyContent","alignItems","fontFamily","borderStyle","borderWidth","borderRadius","Time","positionStyle","theme","shape","now","size","time","x","y","position","top","left","individualStyle","borderColor","background","backgroundColor","color","foreground","minWidth","minHeight","style","toString","themes","ThemeContext","React","createContext","posStyle","margin","divisions","start","end","getDigits","Times","date","division","radius","useContext","times","i","digits","Math","round","getMilliseconds","radians","PI","cos","sin","t","key","push","center","Clock","padding","flexDirection","lineHeight","Range","name","value","setValue","min","max","for","id","type","onChange","e","target","navStyle","right","borderBottom","App","useState","Date","setTime","setSize","setRadius","setShape","setDivision","setTheme","useEffect","timer","setTimeout","clearTimeout","Provider","onClick","Boolean","location","hostname","match","test","console","log","ctx","AudioContext","webkitAudioContext","osc","createOscillator","frequency","gain","createGain","connect","destination","stop","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5ba8d992.chunk.js","sourcesContent":["import React from 'react';\n\nconst offsetX = window.screen.width / 2; // TODO this aint right\nconst offsetY = window.screen.height / 2.25;\n\nconst baseStyle = {\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontFamily: 'monospace',\n    borderStyle: 'solid',\n    borderWidth: '1px',\n    borderRadius: '100%',\n};\n\nexport function Time({theme, shape, now, size, time, x, y}) {\n  let positionStyle;\n  switch (shape) {\n    case 'loop':\n      positionStyle = {\n        position: 'relative',\n        top:  x,\n        left: y,\n      };\n      break;\n    case 'circle':\n      positionStyle = {\n        position: 'absolute',\n        top:  (offsetY + y),\n        left: (offsetX + x),\n      };\n      break;\n    case 'line':\n      positionStyle = {\n        position: 'static'\n      };\n      break;\n    default:\n      break;\n  }\n\n  const individualStyle = { \n    borderColor: now ? theme.background: 'transparent',\n    backgroundColor: now ? theme.background : 'transparent',\n    color: now ? theme.foreground : 'black', \n    minWidth: `${size}px`,\n    minHeight: `${size}px`,\n  };\n\n  const style = {...baseStyle, ...positionStyle, ...individualStyle};\n\n  return (\n    <span style={style}> {time.toString()} </span>\n  );\n}\n","import React from 'react';\n\nexport const themes = {\n  red: {\n    foreground: '#FFFFFF',\n    background: '#DB4C40'\n  },\n  green: {\n    foreground: '#333333',\n    background: '#89BD9E'\n  },\n  blue: {\n    foreground: '#FFFFFF',\n    background: '#586994'\n  },\n}\n\nexport const ThemeContext = React.createContext(themes.red);\n","import React, { useContext } from 'react';\nimport { Time } from './Time';\nimport { ThemeContext } from './Themes';\n\nconst offsetX = window.screen.width / 2; // TODO this aint right\nconst offsetY = window.screen.height / 2.25;\n\nconst posStyle = {\n  margin: '0 auto',\n  width: '75vw',\n  height: '100vh',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n}\n\nconst getCenti = (date) => Math.round(date.getMilliseconds() / 10);\n\nconst divisions = {\n  'centi': {\n    start: 0,\n    end: 100,\n    getDigits: 'getCenti', // TODO make these functions not date methods\n  },\n  'seconds': {\n    start: 0,\n    end: 60,\n    getDigits: 'getSeconds'\n  },\n  'minutes': {\n    start: 0,\n    end: 60,\n    getDigits: 'getMinutes'\n  },\n  'hours': {\n    start: 0,\n    end: 24,\n    getDigits: 'getHours'\n  },\n}\n\nexport function Times({division, time, size, shape, radius}) {\n  const theme = useContext(ThemeContext);\n  const { start, end, getDigits } = divisions[division];\n\n  const times = [];\n  for (let i = start; i < end; i++) {\n    const digits = division === 'centi' ? getCenti(time) : time[getDigits](); // TODO lol\n    const radians = ((i - start) / end) * 2 * Math.PI;\n    const x = Math.cos(radians) * radius\n    const y = Math.sin(radians) * radius\n    const now = (i === digits);\n    const t = (\n     <Time\n       key={i}\n       time={i}\n       x={x}\n       y={y}\n       size={size}\n       shape={shape}\n       now={now}\n       theme={theme}\n      />\n    );\n    times.push(t);\n  }\n  const center = shape === 'circle' ? (<span style={{top: offsetY, left:offsetX, position: 'absolute'}}>&times;</span>) : null;\n  return (\n    <div style={posStyle}>\n      {times}\n      {center}\n    </div>\n  );\n}\n","import React from 'react';\nimport { Times } from './Times';\n\nexport function Clock({\n  time,\n  size,\n  shape,\n  division,\n  radius\n}) {\n  return (\n    <Times \n      time={time}\n      size={size}\n      shape={shape}\n      division={division}\n      radius={radius}\n    />\n  );\n}\n","import React from 'react';\nconst style = {\n  padding: '4px',\n  display: 'inline-flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  alignItems: 'center',\n  lineHeight: 1.1,\n}\n\nexport function Range({name, value, setValue, min, max}) {\n  return (\n    <label for={name} style={style}>\n      <span>{name}:&nbsp;{value}</span>\n      <input \n        id={name} \n        type=\"range\" \n        min={min}\n        max={max}\n        value={value}\n        onChange={(e) => setValue(e.target.value)} />\n    </label>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Clock } from './Clock';\nimport { Range } from './Range';\nimport { ThemeContext, themes } from './Themes';\nimport './App.css';\n\nconst navStyle = {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  width: '100%',\n  position: 'fixed',\n  top: 0,\n  right: 0,\n  padding: '5px',\n  borderBottom: 'solid 1px black',\n};\n\nfunction App() {\n  const [time, setTime] = useState(new Date());\n  const [size, setSize] = useState(15);\n  const [radius, setRadius] = useState(300);\n  const [shape, setShape] = useState('circle');\n  const [division, setDivision] = useState('seconds');\n  const [theme, setTheme] = useState(themes.red);\n\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      const now = new Date();\n      setTime(now);\n    }, 1000); // TODO change w/ division\n    return () => {\n      clearTimeout(timer);\n    }\n  });\n\n  return (\n    <main>\n      <ThemeContext.Provider value={theme}>\n        <Clock \n          time={time} \n          size={size} \n          shape={shape} \n          division={division}\n          radius={radius}\n        />\n      </ThemeContext.Provider>\n      <nav style={navStyle}>\n        <button onClick={() => setTheme(themes.red)}> red </button>\n        <button onClick={() => setTheme(themes.green)}> green </button>\n        <button onClick={() => setTheme(themes.blue)}> blue </button>\n        &nbsp;|&nbsp;\n\n        <button onClick={() => setDivision('seconds')}> seconds </button>\n        <button onClick={() => setDivision('minutes')}> minutes </button>\n        <button onClick={() => setDivision('hours')}> hours </button>\n\n        <Range name=\"size\" value={size} min={0} max={50} setValue={setSize} />\n\n        <Range name=\"radius\" value={radius} min={0} max={1000} setValue={setRadius} />\n\n        <button onClick={() => setShape('loop')}> loop </button>\n        <button onClick={() => setShape('circle')} >circle</button>\n        <button onClick={() => setShape('line')} > line </button>\n      </nav>\n    </main>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nexport function test() {\n  console.log(\"test\");\n  const AudioContext = window.AudioContext || window.webkitAudioContext;\n  const ctx = new AudioContext();\n  const osc = ctx.createOscillator();\n  osc.type = 'sine';\n  osc.frequency.value = 440;\n  const gain = ctx.createGain();\n  gain.gain.value = .5;\n  gain.connect(ctx.destination);\n  osc.connect(gain);\n  osc.start();\n  setTimeout(osc.stop, 500);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}